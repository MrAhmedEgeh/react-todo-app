{"version":3,"sources":["components/Todo.js","components/Todolist.js","components/Input.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","todo","id","checkbox","Todos","SetTodos","useState","editTodo","SetEditTodo","editValue","SetEditValue","useRef","useEffect","current","style","class","className","type","onChange","e","target","value","onClick","map","tod","done","defaultChecked","ref","size","icon","faEdit","filter","el","faMinusSquare","text","faCheck","Todolist","i","Input","input","SetInput","addTodo","undefined","checkDublicates","bool","forEach","placeholder","onKeyUp","uuidv4","onKeyPress","key","faPlus","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.509376bd.chunk.js","sourcesContent":["import React, {useState, useRef, useEffect} from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {faEdit, faMinusSquare, faCheck} from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst Todo = ({todo, id,checkbox, Todos, SetTodos}) => {\r\n\r\n    const [editTodo, SetEditTodo] = useState(false);\r\n    const [editValue, SetEditValue] = useState(todo);\r\n    const Todo = useRef(null);\r\n\r\n    useEffect(() => {\r\n        if(checkbox && Todo.current !== null){\r\n            Todo.current.style = \"text-decoration: line-through\"\r\n        }else if(checkbox && Todo.current !== null){\r\n            Todo.current.style = \"text-decoration: none\"\r\n        }\r\n    })\r\n    // HANDLERS\r\n    const StrikeThrough = () => {\r\n        if(checkbox){\r\n            Todo.current.style = \"text-decoration: none\"\r\n           SetTodos(Todos.map((tod) => tod.id === id ? ({...tod, done: false}) : ({...tod})));\r\n        }else{\r\n            Todo.current.style = \"text-decoration: line-through\"\r\n            SetTodos(Todos.map((tod) => tod.id === id ? ({...tod, done: true}) : ({...tod})));\r\n        }\r\n    }\r\n    const EditTrigger = () => {\r\n        SetEditTodo(true);\r\n    }\r\n\r\n    const submitEdit = () => {\r\n        SetTodos(Todos.map((tod) => tod.id === id ? ({...tod, text: editValue}) : ({...tod})));\r\n        SetEditTodo(false);\r\n    }\r\n    const DeleteTodo = () => {\r\n        \r\n        SetTodos(Todos.filter((el) => (el.id !== id)));\r\n    }\r\n    return(\r\n        <div class=\"todo\" key={id}>\r\n            <div className=\"right\">\r\n            {\r\n                editTodo === true ? \r\n                (<input type=\"text\" onChange={(e) => SetEditValue(e.target.value)} value={editValue} />)\r\n                :\r\n                (\r\n                <>\r\n                <input onClick={() => StrikeThrough()} type=\"checkbox\" defaultChecked={checkbox}/>\r\n                <span ref={Todo}>{todo}</span>\r\n                </>\r\n                    )\r\n            }\r\n            </div>\r\n            <div className=\"btns\">\r\n            {\r\n                editTodo === false ? \r\n                (\r\n                    <>\r\n                    <FontAwesomeIcon onClick={(e) => EditTrigger()} className=\"EditBtn\" size=\"1x\" icon={faEdit}/>\r\n                    <FontAwesomeIcon onClick={DeleteTodo} className=\"DeleteBtn\" size=\"1x\" icon={faMinusSquare}/>\r\n                    </>\r\n                )\r\n                :\r\n                (\r\n                    <FontAwesomeIcon onClick={submitEdit} className=\"EditBtn\" size=\"1x\" icon={faCheck}/>\r\n                )\r\n            }\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Todo;","import React from 'react';\r\nimport Todo from './Todo';\r\n\r\nconst Todolist = ({Todos, SetTodos}) => {\r\n    return(\r\n        <div class=\"todolist\">\r\n            {Todos.map((todo, i) => (\r\n                <Todo todo={todo.text} checkbox={todo.done} Todos={Todos} SetTodos={SetTodos} id={todo.id} key={i}/>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Todolist;","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {faPlus} from '@fortawesome/free-solid-svg-icons';\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst Input = ({input, SetInput,Todos, SetTodos}) => {\r\n    //------HANDLERS--------\r\n    // SET THE INPUT STATE\r\n    const TypeSomething = (e) => {\r\n        SetInput({id: uuidv4(), text: e.target.value, done: false});\r\n    }\r\n    // SUBMIT INPUT TO TODOS ARRAY\r\n    const addTodo = () =>{\r\n        // DO NOT SUBMIT EMPTY TODO\r\n        if(input.text === '' || input.text === undefined)return\r\n        // DO NOT SUBMIT DUBLICATED TODOS\r\n        if(checkDublicates() === false){\r\n            SetTodos([...Todos, input]);\r\n        }\r\n    }\r\n    // GO THROUGH TODOS ARRAY TO FIND DUBLICATES\r\n    const checkDublicates = () =>{\r\n      let bool = false;\r\n       Todos.forEach((todo) => {\r\n            if(todo.text === input.text){\r\n                bool = true;\r\n            }\r\n       });\r\n       return bool;\r\n    }\r\n    return(\r\n        <div class=\"todo-input\">\r\n            <input \r\n            className=\"input\" \r\n            type=\"text\" \r\n            placeholder=\"Type something...\" \r\n            onKeyUp={TypeSomething}  // UPDATE INPUT STATE ON EACH KEY PRESS\r\n            onKeyPress={(e) => e.key === 'Enter' ? addTodo() : ''} // SUBMIT TODO WHEN ENTER KEY PRESSED\r\n            />\r\n            <FontAwesomeIcon onClick={addTodo} className=\"PlusBtn\" size=\"1x\" icon={faPlus}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Input;","import React, {useState} from 'react';\nimport Todolist from './components/Todolist';\nimport Input from './components/Input';\nimport './Styles/App.scss';\n\nfunction App() {\n  const [input, SetInput] = useState({});\n  const [Todos, SetTodos] = useState([]);\n  return (\n    <div className=\"App\">\n      <Input \n      input={input} \n      SetInput={SetInput} \n      SetTodos={SetTodos}\n      Todos={Todos}\n      />\n      <Todolist Todos={Todos} SetTodos={SetTodos}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}